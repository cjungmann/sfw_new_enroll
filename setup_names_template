#!/usr/bin/env bash

# Fill in the blank variable names (Domain is optional),
# then rename (or sym-copy) to 'setup_names'.

# MySQL Database Name:
# Example: DBase=SFW_Enroll
declare DBase=

# Base of application name.
# For Apache, config file name is "sfw_${AppName}.conf,
# and in config file, ServerName is "sfw_${AppName}"
# Example: AppName=enroll
declare AppName=

# Used in config file for DirectoryIndex value:
# The default value is a good choice, but may be changed.
declare DirIndex=Login.srm

# If set, this will be a ServerAlias value in the
# config file in the form "${AppName}.${Domain}"
# Example: Domain=domain.com
declare Domain=

# The value here will replace the default application title
# in the head/title and the body/h1 elements:
declare Title=

# This value determines which javascript scripts (a single
# minimized script, or the set of several components scripts)
# The possible values are "debug" or "release" (though any
# value that is not "debug" is "release".
declare Version=debug


# Look at 'man msmtp'
# For reference, look at /etc/msmtprc

# Emailing Stuff
declare EmailHost=
declare EmailUser=
declare EmailPort=

declare EmailAuth=
declare EmailFrom=
declare EmailPassword=
declare EmailLogFile=

# Setup script 'setup_bogus_accounts' uses the following
# two variables to create a bunch of acounts for testing
# onboarding and password recovery.
declare EmailTestRoot=
declare EmailTestDomain=

declare -a emailargs=(
    "--host=$EmailHost"
    "--user=$EmailUser"
    "--port=$EmailPort"
)

if [ -n "$EmailAuth" ]; then
    emailargs+=( "--auth=$EmailAuth" )
fi

if [ -n "$EmailFrom" ]; then
    emailargs+=( "--auto-from=off" "--from=$EmailFrom" )
fi


# This needs some research:
if [ -n "$EmailPassword" ]; then
    declare peval=$( passwordeval "$EmailPassword" )
    emailargs+=( --passwordeval "$eval" );
fi

msmtp "${emailargs[@]}" blah blah




# smstp 
